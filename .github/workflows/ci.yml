name: CI
on:
  pull_request:
    paths-ignore:
      - README.md
  push:
    branches: main
    paths-ignore:
      - README.md

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust:
          - stable
          - beta
          - nightly-2021-07-01
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          components: rustfmt
          override: true
      - run: rustc --version
      - run: cargo build --release --workspace
      - run: (cd core && cargo build --features=json --release --all-targets)

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust:
          - stable
          - beta
          - nightly-2021-07-01
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          components: rustfmt
          override: true
      - run: rustc --version
      - run: cargo test --all -- --nocapture

  msrv:
    name: Rust ${{matrix.rust}}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        rust: [1.49.0, 1.50.0]
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          components: rustfmt
          override: true
      - run: rustc --version
      - run: cargo build --release --workspace --all-features

  formatting:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
      - run: go get github.com/campoy/embedmd
      - uses: actions/setup-ruby@v1
      - run: gem install mdl
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly-2021-07-01
          override: true
          components: rustfmt
      - run: rustc --version
      - run: cargo fmt --all -- --check
      - run: scripts/check-format.sh

  bench:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly-2021-07-01
          override: true
          components: rustfmt
      - run: cargo bench --all-targets

  clippy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly-2021-07-01
          override: true
          components: rustfmt, clippy
      - run: rustc --version
      - run: cargo clippy --all-features --all-targets -- -Dwarnings
      - run: cargo clippy --all-targets --manifest-path proto/Cargo.toml --no-default-features -- -Dwarnings
      - run: cargo clippy --all-targets --manifest-path proto/Cargo.toml --no-default-features --features json -- -Dwarnings
      - run: cargo clippy --all-targets --manifest-path core/Cargo.toml --no-default-features -- -Dwarnings
      - run: cargo clippy --all-targets --manifest-path core/Cargo.toml --no-default-features --features insecure -- -Dwarnings
      - run: cargo clippy --all-targets --manifest-path core/Cargo.toml --no-default-features --features json -- -Dwarnings
      - run: cargo clippy --all-targets --manifest-path core/Cargo.toml --no-default-features --features std -- -Dwarnings
      - run: cargo clippy --all-targets --manifest-path core/Cargo.toml --no-default-features --features insecure,json -- -Dwarnings
      - run: cargo clippy --all-targets --manifest-path core/Cargo.toml --no-default-features --features insecure,std -- -Dwarnings

  doc:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
      - run: rustc --version
      - run: cargo doc --no-deps --document-private-items --all-features

  nostd:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly-2021-07-01
          override: true
          target: thumbv7em-none-eabi
      # Target thumbv7em does not have std
      - run: cargo build --target thumbv7em-none-eabi --manifest-path no-std-check/Cargo.toml

  udeps:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly-2021-07-01
          override: true
          components: rustfmt
      - uses: actions-rs/install@v0.1.2
        with:
          crate: cargo-udeps
          use-tool-cache: true
          version: 0.1.15
      - run: cargo udeps

  deny:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly-2021-07-01
          override: true
          components: rustfmt
      - run: cargo install --locked --version 0.8.5 cargo-deny
      - run: cargo deny check

  coverage:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
          fetch-depth: 0
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly-2021-07-01
          override: true
          components: rustfmt
      - uses: actions-rs/install@v0.1.2
        with:
          crate: cargo-tarpaulin
          use-tool-cache: true
      - run: cargo tarpaulin --verbose --ignore-tests --all-features --timeout=600 --out Xml
      - name: Upload to codecov.io
        run: |
          bash <(curl -s https://codecov.io/bash)
